raw `
.equ LOCALID_DAISY,    1
.equ LOCALID_TOWN_MAP, 2

.equ RECEIVED_TOWN_MAP, VAR_TEMP_1

PalletTown_RivalsHouse_MapScripts::
	map_script MAP_SCRIPT_ON_TRANSITION, PalletTown_RivalsHouse_OnTransition
	.byte 0

PalletTown_RivalsHouse_OnTransition::
	call_if_lt VAR_MAP_SCENE_PALLET_TOWN_RIVALS_HOUSE, 2, PalletTown_RivalsHouse_EventScript_MoveDaisyToTable
	call_if_ge VAR_MAP_SCENE_PALLET_TOWN_RIVALS_HOUSE, 2, PalletTown_RivalsHouse_EventScript_AlreadyReceivedTownMap
	end

PalletTown_RivalsHouse_EventScript_MoveDaisyToTable::
	setobjectmovementtype LOCALID_DAISY, MOVEMENT_TYPE_FACE_RIGHT
	setobjectxyperm LOCALID_DAISY, 5, 4
	return

PalletTown_RivalsHouse_EventScript_AlreadyReceivedTownMap::
	setvar RECEIVED_TOWN_MAP, TRUE
	return

PalletTown_RivalsHouse_EventScript_Daisy::
	lock
	faceplayer
	famechecker FAMECHECKER_DAISY, FCPICKSTATE_COLORED, UpdatePickStateFromSpecialVar8005
	goto_if_set FLAG_SYS_GAME_CLEAR, PalletTown_RivalsHouse_EventScript_GroomMon
	goto_if_eq RECEIVED_TOWN_MAP, TRUE, PalletTown_RivalsHouse_EventScript_PleaseGiveMonsRest
	goto_if_eq VAR_MAP_SCENE_PALLET_TOWN_RIVALS_HOUSE, 2, PalletTown_RivalsHouse_EventScript_ExplainTownMap
	goto_if_eq VAR_MAP_SCENE_PALLET_TOWN_RIVALS_HOUSE, 1, PalletTown_RivalsHouse_EventScript_GiveTownMap
	goto_if_ge VAR_MAP_SCENE_PALLET_TOWN_PROFESSOR_OAKS_LAB, 1, PalletTown_RivalsHouse_EventScript_HeardBattledRival
	msgbox PalletTown_RivalsHouse_Text_HiBrothersAtLab
	closemessage
	applymovement LOCALID_DAISY, Common_Movement_FaceOriginalDirection
	waitmovement 0
	release
	end

PalletTown_RivalsHouse_EventScript_HeardBattledRival::
	msgbox PalletTown_RivalsHouse_Text_HeardYouBattledRival
	release
	end

PalletTown_RivalsHouse_EventScript_GroomMon::
	goto_if_questlog EventScript_ReleaseEnd
	special QuestLog_CutRecording
	goto_if_lt VAR_MASSAGE_COOLDOWN_STEP_COUNTER, 500, PalletTown_RivalsHouse_EventScript_RateMonFriendship
	msgbox PalletTown_RivalsHouse_Text_LikeMeToGroomMon, MSGBOX_YESNO
	goto_if_eq VAR_RESULT, NO, PalletTown_RivalsHouse_EventScript_DeclineGrooming
	msgbox PalletTown_RivalsHouse_Text_GroomWhichOne
	special ChoosePartyMon
	waitstate
	lock
	faceplayer
	goto_if_ge VAR_0x8004, PARTY_SIZE, PalletTown_RivalsHouse_EventScript_DeclineGrooming
	specialvar VAR_RESULT, GetPartyMonSpecies
	goto_if_eq VAR_RESULT, SPECIES_EGG, PalletTown_RivalsHouse_EventScript_CantGroomEgg
	msgbox PalletTown_RivalsHouse_Text_LookingNiceInNoTime
	closemessage
	fadescreen FADE_TO_BLACK
	playfanfare MUS_HEAL
	waitfanfare
	special DaisyMassageServices
	fadescreen FADE_FROM_BLACK
	special BufferMonNickname
	msgbox PalletTown_RivalsHouse_Text_ThereYouGoAllDone
	release
	end

PalletTown_RivalsHouse_EventScript_CantGroomEgg::
	msgbox PalletTown_RivalsHouse_Text_CantGroomAnEgg
	release
	end

PalletTown_RivalsHouse_EventScript_DeclineGrooming::
	msgbox PalletTown_RivalsHouse_Text_DontNeedAnyGrooming
	release
	end

PalletTown_RivalsHouse_EventScript_RateMonFriendship::
	msgbox PalletTown_RivalsHouse_Text_MayISeeFirstMon
	specialvar VAR_RESULT, GetLeadMonFriendship
	switch VAR_RESULT
	case 0, PalletTown_RivalsHouse_EventScript_MonFriendshipLowest
	case 1, PalletTown_RivalsHouse_EventScript_MonFriendshipLower
	case 2, PalletTown_RivalsHouse_EventScript_MonFriendshipLow
	case 3, PalletTown_RivalsHouse_EventScript_MonFriendshipMid
	case 4, PalletTown_RivalsHouse_EventScript_MonFriendshipHigh
	case 5, PalletTown_RivalsHouse_EventScript_MonFriendshipHigher
	case 6, PalletTown_RivalsHouse_EventScript_MonFriendshipHighest
	end

PalletTown_RivalsHouse_EventScript_MonFriendshipLowest::
	msgbox PalletTown_RivalsHouse_Text_WhyWouldMonHateYouSoMuch
	release
	end

PalletTown_RivalsHouse_EventScript_MonFriendshipLower::
	msgbox PalletTown_RivalsHouse_Text_DontLikeWayItGlaresAtYou
	release
	end

PalletTown_RivalsHouse_EventScript_MonFriendshipLow::
	msgbox PalletTown_RivalsHouse_Text_NotFamiliarWithYouYet
	release
	end

PalletTown_RivalsHouse_EventScript_MonFriendshipMid::
	msgbox PalletTown_RivalsHouse_Text_ItsWarmingUpToYou
	release
	end

PalletTown_RivalsHouse_EventScript_MonFriendshipHigh::
	msgbox PalletTown_RivalsHouse_Text_ItsQuiteFriendly
	release
	end

PalletTown_RivalsHouse_EventScript_MonFriendshipHigher::
	msgbox PalletTown_RivalsHouse_Text_ItLooksVeryHappy
	release
	end

PalletTown_RivalsHouse_EventScript_MonFriendshipHighest::
	msgbox PalletTown_RivalsHouse_Text_CouldntLoveYouMore
	release
	end

PalletTown_RivalsHouse_EventScript_PleaseGiveMonsRest::
	msgbox PalletTown_RivalsHouse_Text_PleaseGiveMonsRest
	release
	end

PalletTown_RivalsHouse_EventScript_GiveTownMap::
	msgbox PalletTown_RivalsHouse_Text_ErrandForGrandpaThisWillHelp
	release
	end

PalletTown_RivalsHouse_EventScript_NoRoomForTownMap::
	msgbox PalletTown_RivalsHouse_Text_DontHaveSpaceForThis
	release
	end

PalletTown_RivalsHouse_EventScript_ExplainTownMap::
	msgbox PalletTown_RivalsHouse_Text_ExplainTownMap
	release
	end

PalletTown_RivalsHouse_EventScript_TownMap::
	msgbox PalletTown_RivalsHouse_Text_ItsBigMapOfKanto, MSGBOX_NPC
	end

PalletTown_RivalsHouse_EventScript_Bookshelf::
	msgbox PalletTown_RivalsHouse_Text_ShelvesCrammedFullOfBooks, MSGBOX_SIGN
	end


`
script PalletTown_RivalsHouse_EventScript_CeliaBoB {
	msgbox("Every time I watched someone play\nthis hack, I'd promise that I would\ladd the full Mario 64 level here.\pWell...\nI delivered on my promise.", MSGBOX_NPC)
	end
}
script BobOmbBattlefield_EventScript_CannonBuddy {
	msgbox("I'm a BOB-OMB BUDDY!\pThis is placeholder text!\nYay!", MSGBOX_NPC)
	end
}
script BobOmbBattlefield_EventScript_IntroBuddy {
	msgbox("I'm a BOB-OMB BUDDY!\pThis is placeholder text!\nYay!", MSGBOX_NPC)
	end
}

script BobOmbBattlefield_EventScript_Sign {
	msgbox("I'm a sign!\pThis is placeholder text!\nYay!", MSGBOX_SIGN)
	end
}

script BobOmbBattlefield_EventScript_Cannon {
	lock
	msgbox("Placeholder text!\pLaunch yourself out of a cannon?\n", MSGBOX_YESNO)
	if(var(VAR_RESULT) == YES) {
		closemessage
		delay(15)
		playse(SE_LEDGE)
		switch(var(VAR_FACING)) {
			case DIR_NORTH:
				applymovement(OBJ_EVENT_ID_PLAYER, JumpUp)
			case DIR_SOUTH:
				applymovement(OBJ_EVENT_ID_PLAYER, JumpDown)
			case DIR_EAST:
				applymovement(OBJ_EVENT_ID_PLAYER, JumpRight)
			case DIR_WEST:
				applymovement(OBJ_EVENT_ID_PLAYER, JumpLeft)
		}
		waitmovement(0)
		setmetatile(31,32,0x075,0)
		applymovement(OBJ_EVENT_ID_PLAYER, FallIntoHole)
		waitmovement(0)
		delay(30)
		msgbox("It is implied that a cannon is\nlaunching you.", MSGBOX_DEFAULT)
		closemessage
		fadescreen(FADE_TO_BLACK)

		//player faces down
		//spawn camera
		//camera locks in place
		//cannon comes up out of the ground
		//player locks facing direction
		//player slides up very quickly until off screen
		
		warp(MAP_PALLET_TOWN_RIVALS_HOUSE, 9, 1)

	}
	release
	end
}

script SaffronCity_CopycatHouse_EventScript_Picture {
	lock
	msgbox("A painting of three lit\nbombs.\pWanna jump face-first into it?\n", MSGBOX_YESNO)
	if(var(VAR_RESULT) == YES) {
		closemessage
		delay(20)
		applymovement(OBJ_EVENT_ID_PLAYER, BackUp)
		waitmovement(0)
		playse(SE_LEDGE)
		applymovement(OBJ_EVENT_ID_PLAYER, JumpUp)
		waitmovement(0)
		fadescreen(FADE_TO_WHITE)
		delay(30)
		setobjectxy(OBJ_EVENT_ID_PLAYER, 31, 35)
		warphole(MAP_PALLET_TOWN_BOB_OMB_BATTLEFIELD)
		applymovement(OBJ_EVENT_ID_PLAYER, Common_Movement_FaceUp)
	} else {
		msgbox("{PLAYER} decided against a\nlikely concussion.", MSGBOX_DEFAULT)
	}
	release
}

script PalletTown_RivalsHouse_EventScript_Picture {
		lock
	msgbox("A familiar painting of three\nlit bombs.\pWanna jump face-first into it?\n", MSGBOX_YESNO)
	if(var(VAR_RESULT) == YES) {
		closemessage
		delay(20)
		applymovement(OBJ_EVENT_ID_PLAYER, BackUp)
		waitmovement(0)
		playse(SE_LEDGE)
		applymovement(OBJ_EVENT_ID_PLAYER, JumpSplat)
		waitmovement(0)
		playse(SE_WALL_HIT)
		applymovement(OBJ_EVENT_ID_PLAYER, Faceplant)
		waitmovement(0)
		delay(40)
		
	}
	release
}

movement BackUp {
	walk_slow_down * 2
	face_up
	delay_16 * 3
	player_run_up * 2
}

movement JumpSplat {
	jump_up
}

movement Faceplant {
	lock_facing_direction
	slide_down
	enable_jump_landing_ground_effect
	unlock_facing_direction
}

movement JumpUp {
	jump_up
	set_invisible
}
movement JumpDown {
	jump_down
	set_invisible
}
movement JumpLeft {
	jump_left
	set_invisible
}
movement JumpRight {
	jump_right
	set_invisible
}
movement ExitPainting {
	jump_2_down
}

movement FallIntoHole {
	lock_facing_direction
	slide_down
	unlock_facing_direction
}